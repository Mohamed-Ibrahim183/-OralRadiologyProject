// Define basic variables for colors and fonts to ensure consistency and easy modifications
$font-primary: "Arial", sans-serif;
$color-primary: hsl(218, 70%, 18%);
$color-secondary: hsl(225, 68%, 53%);
$background-dark: #0d254f;
$button-gradient-start: hsl(201, 92%, 47%);
$button-gradient-end: hsl(225, 68%, 53%);

// Mixin for button styles to reuse throughout
@mixin button-style {
  background-image: linear-gradient(
    90deg,
    $button-gradient-start 0%,
    $button-gradient-end 100%
  );
  color: white;
  font-size: 1.6rem;
  width: 300px;
  text-transform: uppercase;
  padding: 20px 30px;
  text-align: center;
  border-radius: 4px;
  box-shadow: 0px 10px 30px hsla(0, 0%, 0%, 0.1);
}

html {
  font-family: $font-primary;
  font-size: 10px;
  scroll-behavior: smooth;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

a,
img,
span,
input,
button,
ion-icon {
  display: block;
}

.body {
  color: hsl(0, 0%, 47%);
  font-size: 1.5rem;
}

.HomePage {
  .PageBody {
    font-family: $font-primary;
    background: {
      position: static;
      blend-mode: hue;
      color: rgb(255, 255, 255);
      repeat: no-repeat;
      size: cover;
    }
  }

  .parent {
    margin: -2rem 1rem 30rem;
    padding: 2rem;
    text-align: center;

    .child {
      display: inline-block;
      padding: 1rem;
      vertical-align: middle;
      align-items: center;
    }
  }

  .title-line {
    margin-top: 200px;
  }

  // Utilize & for nesting pseudo classes and elements
  .btn {
    @include button-style; // Using mixin for button styles

    &:is(:hover, :focus) {
      --deg: -90deg;
    }
  }

  .bg-image {
    background-color: #0e264f;
    padding-bottom: 30rem;
  }

  .section-subtitle {
    color: $color-secondary;
    font: {
      family: $font-primary;
      size: 1.8rem;
      weight: 700;
    }
    text-transform: uppercase;
  }

  // Similar approach for other classes...
}

// Responsive design with media queries
@media (max-width: 100em) {
  .HomePage {
    .w-100 {
      width: 30%;
      height: 30%;
      margin: 0 auto;
    }

    .Human {
      display: block;
      align-items: center;
      justify-content: center;
      text-align: center;

      .btn {
        display: block;
        margin: 0 auto;
      }
    }
  }
}
